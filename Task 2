describe("Petstore API - CRUD operations for Pet", () => {
  let petId;

  it("should create a new pet", () => {
    cy.request({
      method: "POST",
      url: "https://petstore.swagger.io/v2/pet",
      body: {
        id: Date.now(),
        name: "Buddy",
        status: "available",
      },
    }).then((response) => {
      expect(response.status).to.eq(200);
      expect(response.body).to.have.property("id");
      expect(response.body.name).to.eq("Buddy");
      expect(response.body.status).to.eq("available");

      // Store pet ID for later tests
      petId = response.body.id;
    });
  });

  it("should update the pet details", () => {
    cy.request({
      method: "PUT",
      url: "https://petstore.swagger.io/v2/pet",
      body: {
        id: petId,
        name: "BuddyUpdated",
        status: "sold",
      },
    }).then((response) => {
      expect(response.status).to.eq(200);
      expect(response.body.name).to.eq("BuddyUpdated");
      expect(response.body.status).to.eq("sold");
    });
  });

  it("should retrieve the pet details", () => {
    cy.request({
      method: "GET",
      url: `https://petstore.swagger.io/v2/pet/${petId}`,
    }).then((response) => {
      expect(response.status).to.eq(200);
      expect(response.body.id).to.eq(petId);
      expect(response.body.name).to.eq("BuddyUpdated");
      expect(response.body.status).to.eq("sold");
    });
  });

  it("should delete the pet", () => {
    cy.request({
      method: "DELETE",
      url: `https://petstore.swagger.io/v2/pet/${petId}`,
    }).then((response) => {
      expect(response.status).to.eq(200);
    });

    // Verify pet is deleted
    cy.request({
      method: "GET",
      url: `https://petstore.swagger.io/v2/pet/${petId}`,
      failOnStatusCode: false, // Prevents Cypress from failing on 404
    }).then((response) => {
      expect(response.status).to.eq(404);
    });
  });
});
